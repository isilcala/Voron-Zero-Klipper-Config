[include FlyMicro4.cfg]
[include mainsail.cfg]
# [include moonraker_obico_macros.cfg]
[include sht36v3.cfg]
[include OrbiterSensor.cfg]
[include SideSwipe.cfg]
[include macros.cfg]
[include timelapse.cfg]
[include KlipperExpander.cfg]
# This file contains common pin mappings for Duet2 Eth/Wifi boards. To
# use this config, the firmware should be compiled for the SAM4E8E.

# See docs/Config_Reference.md for a description of parameters.
# host MCU service is preinstalled and ready to use with:
[mcu CB2]
serial: /tmp/klipper_host_mcu
[temperature_sensor CB2]        #显示主板的温度
sensor_type: temperature_host

#####################################################################
#      Tmodel and acceleration
#####################################################################
[printer]   
kinematics: corexy
max_velocity: 300
max_accel: 10000
max_z_velocity: 15
max_z_accel: 50
#minimum_cruise_ratio: 0.5
#   Most moves will accelerate to a cruising speed, travel at that
#   cruising speed, and then decelerate. However, some moves that
#   travel a short distance could nominally accelerate and then
#   immediately decelerate. This option reduces the top speed of these
#   moves to ensure there is always a minimum distance traveled at a
#   cruising speed. That is, it enforces a minimum distance traveled
#   at cruising speed relative to the total distance traveled. It is
#   intended to reduce the top speed of short zigzag moves (and thus
#   reduce printer vibration from these moves). For example, a
#   minimum_cruise_ratio of 0.5 would ensure that a standalone 1.5mm
#   move would have a minimum cruising distance of 0.75mm. Specify a
#   ratio of 0.0 to disable this feature (there would be no minimum
#   cruising distance enforced between acceleration and deceleration).
#   The value specified here may be changed at runtime using the
#   SET_VELOCITY_LIMIT command. The default is 0.5.
#square_corner_velocity: 5.0
#   The maximum velocity (in mm/s) that the toolhead may travel a 90
#   degree corner at. A non-zero value can reduce changes in extruder
#   flow rates by enabling instantaneous velocity changes of the
#   toolhead during cornering. This value configures the internal
#   centripetal velocity cornering algorithm; corners with angles
#   larger than 90 degrees will have a higher cornering velocity while
#   corners with angles less than 90 degrees will have a lower
#   cornering velocity. If this is set to zero then the toolhead will
#   decelerate to zero at each corner. The value specified here may be
#   changed at runtime using the SET_VELOCITY_LIMIT command. The
#   default is 5mm/s.

#####################################################################
#      X/Y Stepper Settings
#####################################################################
[stepper_x]
## Refer to https://docs.vorondesign.com/build/startup/#v0
# step_pin: gpio6
# dir_pin:gpio3                                    # Check motor direction in link above. If inverted, add a ! before gpio3 
# enable_pin:!gpio7
step_pin: gpio23
dir_pin: gpio22                                    # Check motor direction in link above. If inverted, add a ! before gpio3 
enable_pin: !gpio24
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200                    # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
# endstop_pin: ^gpio14
endstop_pin: ^sht36:gpio16
position_endstop: 119
position_max: 119
homing_speed: 40                                # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
#   Distance to backoff (in mm) before homing a second time during
#   homing. Set this to zero to disable the second home. The default
#   is 5mm.
#homing_positive_dir: true
#   If true, homing will cause the stepper to move in a positive
#   direction (away from zero); if false, home towards zero. It is
#   better to use the default than to specify this parameter. The
#   default is true if position_endstop is near position_max and false
#   if near position_min.

[tmc2209 stepper_x]
uart_pin: gpio9
# uart_address:0
uart_address: 3
interpolate: True
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This only works if microsteps
#   is set to 16. Interpolation does introduce a small systemic
#   positional deviation - see TMC_Drivers.md for details. The default
#   is True.
run_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0                        # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
# diag_pin: ^gpio13
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
# driver_SGTHRS: 80

[stepper_y]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio1
dir_pin: gpio0                                    # Check motor direction in link above. If inverted, add a ! before gpio0
enable_pin: !gpio2
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
endstop_pin: ^gpio13
position_endstop: 120
position_max: 120
homing_speed: 40 
homing_retract_dist: 0
#   Distance to backoff (in mm) before homing a second time during
#   homing. Set this to zero to disable the second home. The default
#   is 5mm.
#homing_positive_dir: true
#   If true, homing will cause the stepper to move in a positive
#   direction (away from zero); if false, home towards zero. It is
#   better to use the default than to specify this parameter. The
#   default is true if position_endstop is near position_max and false
#   if near position_min.

[tmc2209 stepper_y]
uart_pin: gpio9
uart_address: 1
interpolate: True
run_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0
# diag_pin: ^gpio14
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
# driver_SGTHRS: 80

#####################################################################
#   Z Stepper Settings
#####################################################################
[stepper_z]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio26
dir_pin: gpio25                                    # Check motor direction in link above. If inverted, add a ! before gpio25
enable_pin: !gpio27
microsteps: 16
endstop_pin: ^gpio15
# endstop_pin: probe:z_virtual_endstop
rotation_distance: 8
#position_endstop: 120
position_max: 120
position_min: -1.5
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: gpio9
uart_address: 2
interpolate: True
run_current: 0.37                                 ## For LDO-42STH25-1004CL200E 1.0A
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#      Extruder thermal sensitivity
#####################################################################
## Please select the type of thermocouple you want to use.
## 请根据你想要使用的热敏选择
[extruder]
heater_pin:sht36:gpio23
## Type of sensor - common thermistors are (Generic 3950, ATC Semitec 104GT-2)
## 传感器类型-常见的热敏电阻器是 (Generic 3950, ATC Semitec 104GT-2)
sensor_type:Generic 3950
#   Type of sensor - common thermistors are "EPCOS 100K B57560G104F",
#   "ATC Semitec 104GT-2", "ATC Semitec 104NT-4-R025H42G", "Generic
#   3950","Honeywell 100K 135-104LAG-J01", "NTC 100K MGB18-104F39050L32",
#   "SliceEngineering 450", and "TDK NTCG104LH104JT1". See the
#   "Temperature sensors" section for other sensors. This parameter
#   must be provided.
sensor_pin:sht36:gpio27
###------------------------------------------------------------------
## If using PT1000, please connect the jumper next to the thermal sensitivity.
## 如果使用PT1000请将热敏旁边跳线接上
# sensor_type:PT1000
# sensor_pin:sht36:gpio27
# pullup_resistor: 1000
###------------------------------------------------------------------
## Using MAX31865 to connect PT100 or PT1000
## 使用MAX31865接PT100或者PT1000
# sensor_type: MAX31865
# sensor_pin: sht36:gpio17
# spi_software_sclk_pin: sht36:gpio2
# spi_software_mosi_pin: sht36:gpio3
# spi_software_miso_pin: sht36:gpio4
# rtd_reference_r: 430

#####################################################################
#      extruder
#####################################################################
## https://www.klipper3d.org/Config_Reference.html#extruder
[extruder]
step_pin:sht36:gpio7
dir_pin:sht36:gpio6
enable_pin: !sht36:gpio14
rotation_distance: 4.72974
## rotation_distance = The original rotation_distance multiplied by the actual extrusion length divided by the requested extrusion length.
## 校准步进值: 22.44=旧值22*实际值102/目标值100
# gear_ratio:50:10
## 减速比（伽利略齿比7.5:1 并且这行注释掉；BMG为50：17，输出轴在前，输入轴在后）
microsteps:16
full_steps_per_rotation: 200
nozzle_diameter:0.400
filament_diameter:1.75
max_extrude_only_distance: 500
#max_extrude_only_distance: 200.0   # 挤出流量报错可以注释这个，但是建议重新切片
max_extrude_only_velocity: 120
#max_extrude_only_accel:
#   Maximum velocity (in mm/s) and acceleration (in mm/s^2) of the
#   extruder motor for retractions and extrude-only moves. These
#   settings do not have any impact on normal printing moves. If not
#   specified then they are calculated to match the limit an XY
#   printing move with a cross section of 4.0*nozzle_diameter^2 would
#   have.
pressure_advance: 0.045 #to be calibrated
#   The amount of raw filament to push into the extruder during
#   extruder acceleration. An equal amount of filament is retracted
#   during deceleration. It is measured in millimeters per
#   millimeter/second. The default is 0, which disables pressure
#   advance.
pressure_advance_smooth_time: 0.03 #to be calibrated
#   A time range (in seconds) to use when calculating the average
#   extruder velocity for pressure advance. A larger value results in
#   smoother extruder movements. This parameter may not exceed 200ms.
#   This setting only applies if pressure_advance is non-zero. The
#   default is 0.040 (40 milliseconds).
max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   heater_pin may be set to. The value 1.0 allows the pin to be set
#   fully enabled for extended periods, while a value of 0.5 would
#   allow the pin to be enabled for no more than half the time. This
#   setting may be used to limit the total power output (over extended
#   periods) to the heater. The default is 1.0.
min_extrude_temp: 170
#   The minimum temperature (in Celsius) at which extruder move
#   commands may be issued. The default is 170 Celsius.
min_temp: -20
max_temp: 350
#   The maximum range of valid temperatures (in Celsius) that the
#   heater must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. This check can help detect some
#   heater and sensor hardware failures. Set this range just wide
#   enough so that reasonable temperatures do not result in an error.
#   These parameters must be provided.
#喷嘴温度PID校准命令：  "PID_CALIBRATE HEATER=extruder TARGET=245
# control: pid
# pid_kp: 26.213
# pid_ki:1.304
# pid_kd: 131.721
step_pulse_duration: 0.000004
#   The minimum time between the step pulse signal edge and the
#   following "unstep" signal edge. This is also used to set the
#   minimum time between a step pulse and a direction change signal.
#   The default is 0.000000100 (100ns) for TMC steppers that are
#   configured in UART or SPI mode, and the default is 0.000002 (which
#   is 2us) for all other steppers.
###------------------------------------------------------------------
[tmc2209 extruder]
uart_pin:sht36:gpio15
interpolate:true
run_current: 0.50
# default value provided by Orbiter 2.0 manual is 0.85, but 0.3 # for LDO 36STH17-1004AHG
sense_resistor:0.110
stealthchop_threshold:0
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.
###------------------------------------------------------------------
# [tmc2240 extruder]
# uart_pin:SB2040V3:gpio15
# interpolate:False
# run_current: 0.65
# interpolate: False
# rref: 12300
# stealthchop_threshold: 0 
###------------------------------------------------------------------
[verify_heater extruder]
max_error: 20
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.


#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
heater_pin: gpio20
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common#thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type:Generic 3950
sensor_pin: gpio29
smooth_time: 3.0
max_power: 1.0                                                     
min_temp: -20
max_temp: 120

[stepper_z]
#position_endstop: 120

[probe]
#z_offset: 10

[gcode_arcs]
resolution: 0.1 #1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 59,6
screw1_name: front screw
screw2: 4,117
screw2_name: back left
screw3: 114,117
screw3_name: back right
Probe_height: 0.1

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 37.953
#*# pid_ki = 15.814
#*# pid_kd = 22.772
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.554
#*# pid_ki = 3.208
#*# pid_kd = 304.950
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 80.2
#*# shaper_type_y = mzv
#*# shaper_freq_y = 54.2
#*#
#*# [probe]
#*# z_offset = 16.600
#*#
#*# [stepper_z]
#*# position_endstop = 119.800
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.036877, 0.025210, 0.003544, -0.009790, -0.020623, -0.044790, -0.079790, -0.092290
#*# 	  0.024377, 0.026044, 0.001877, -0.004790, -0.014790, -0.045623, -0.073956, -0.090623
#*# 	  0.015210, 0.016044, 0.007710, -0.005623, -0.014790, -0.044790, -0.066456, -0.086456
#*# 	  0.006044, 0.006044, 0.003544, -0.007290, -0.019790, -0.038123, -0.051456, -0.082290
#*# 	  0.011877, 0.010210, 0.002710, -0.007290, -0.009790, -0.030623, -0.034790, -0.065623
#*# 	  -0.010623, -0.007290, 0.001877, 0.001877, 0.002710, -0.015623, -0.035623, -0.047290
#*# 	  -0.005623, -0.000623, -0.002290, 0.001877, -0.009790, -0.006456, -0.038956, -0.037290
#*# 	  0.003544, 0.004377, 0.006044, 0.006044, -0.002290, -0.004790, -0.002290, -0.024790
#*# 	  0.009377, 0.014377, 0.013544, 0.025210, 0.028544, 0.012710, 0.005210, 0.005210
#*# 	  0.021044, 0.031877, 0.030210, 0.032710, 0.029377, 0.027710, 0.031877, 0.034377
#*# x_count = 8
#*# y_count = 10
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 25.0
#*# max_x = 109.98
#*# min_y = 5.0
#*# max_y = 109.94
