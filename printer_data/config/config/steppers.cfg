#####################################################################
#      extruder
#####################################################################
## https://www.klipper3d.org/Config_Reference.html#extruder
[extruder]
# Heater & Sensor
heater_pin:sht36:gpio23
sensor_type:Generic 3950
sensor_pin:sht36:gpio27
# Stepper
step_pin:sht36:gpio7
dir_pin:sht36:gpio6
enable_pin: !sht36:gpio14
rotation_distance: 4.72974
## rotation_distance = The original rotation_distance multiplied by the actual extrusion length divided by the requested extrusion length.
## 校准步进值: 22.44=旧值22*实际值102/目标值100
# gear_ratio:50:10
## 减速比（伽利略齿比7.5:1 并且这行注释掉；BMG为50：17，输出轴在前，输入轴在后）
microsteps: 32
full_steps_per_rotation: 200
nozzle_diameter:0.400
filament_diameter:1.75
max_extrude_only_distance: 500
#max_extrude_only_distance: 200.0   # 挤出流量报错可以注释这个，但是建议重新切片
max_extrude_only_velocity: 120
#max_extrude_only_accel:
#   Maximum velocity (in mm/s) and acceleration (in mm/s^2) of the
#   extruder motor for retractions and extrude-only moves. These
#   settings do not have any impact on normal printing moves. If not
#   specified then they are calculated to match the limit an XY
#   printing move with a cross section of 4.0*nozzle_diameter^2 would
#   have.
pressure_advance: 0.02 #to be calibrated
#   The amount of raw filament to push into the extruder during
#   extruder acceleration. An equal amount of filament is retracted
#   during deceleration. It is measured in millimeters per
#   millimeter/second. The default is 0, which disables pressure
#   advance.
pressure_advance_smooth_time: 0.03 #to be calibrated
#   A time range (in seconds) to use when calculating the average
#   extruder velocity for pressure advance. A larger value results in
#   smoother extruder movements. This parameter may not exceed 200ms.
#   This setting only applies if pressure_advance is non-zero. The
#   default is 0.040 (40 milliseconds).
max_power: 1.0
#   The maximum power (expressed as a value from 0.0 to 1.0) that the
#   heater_pin may be set to. The value 1.0 allows the pin to be set
#   fully enabled for extended periods, while a value of 0.5 would
#   allow the pin to be enabled for no more than half the time. This
#   setting may be used to limit the total power output (over extended
#   periods) to the heater. The default is 1.0.
min_extrude_temp: 170
#   The minimum temperature (in Celsius) at which extruder move
#   commands may be issued. The default is 170 Celsius.
min_temp: -20
max_temp: 350
#   The maximum range of valid temperatures (in Celsius) that the
#   heater must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. This check can help detect some
#   heater and sensor hardware failures. Set this range just wide
#   enough so that reasonable temperatures do not result in an error.
#   These parameters must be provided.
step_pulse_duration: 0.000004
#   The minimum time between the step pulse signal edge and the
#   following "unstep" signal edge. This is also used to set the
#   minimum time between a step pulse and a direction change signal.
#   The default is 0.000000100 (100ns) for TMC steppers that are
#   configured in UART or SPI mode, and the default is 0.000002 (which
#   is 2us) for all other steppers.
###------------------------------------------------------------------
[tmc2209 extruder]
uart_pin:sht36:gpio15
interpolate: false
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
run_current: 0.5 # for LDO 36STH17-1004AHG
## For LDO LDO 36STH20-1004AHG 1A 1.8° 
# run_current: 0.6 # for LDO 36STH20-1004AHG
# default value provided by Orbiter 2.0 manual is 0.85, but 0.3 # for LDO 36STH17-1004AHG
sense_resistor:0.110
stealthchop_threshold:0
#   The velocity (in mm/s) to set the "stealthChop" threshold to. When
#   set, "stealthChop" mode will be enabled if the stepper motor
#   velocity is below this value. The default is 0, which disables
#   "stealthChop" mode.
[verify_heater extruder]
max_error: 20
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
#check_gain_time:
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

#####################################################################
#      X/Y Stepper Settings
#####################################################################
[stepper_x]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio6
dir_pin:gpio3                                    # Check motor direction in link above. If inverted, add a ! before gpio3 
enable_pin:!gpio7
# step_pin: gpio23
# dir_pin: gpio22                                    # Check motor direction in link above. If inverted, add a ! before gpio3 
# enable_pin: !gpio24
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                    # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^sht36:gpio22
position_endstop: 119
position_max: 119
homing_speed: 40                                # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
#   Distance to backoff (in mm) before homing a second time during
#   homing. Set this to zero to disable the second home. The default
#   is 5mm.
#homing_positive_dir: true
#   If true, homing will cause the stepper to move in a positive
#   direction (away from zero); if false, home towards zero. It is
#   better to use the default than to specify this parameter. The
#   default is true if position_endstop is near position_max and false
#   if near position_min.
step_pulse_duration: 0.000004
#   The minimum time between the step pulse signal edge and the
#   following "unstep" signal edge. This is also used to set the
#   minimum time between a step pulse and a direction change signal.
#   The default is 0.000000100 (100ns) for TMC steppers that are
#   configured in UART or SPI mode, and the default is 0.000002 (which
#   is 2us) for all other steppers.

[tmc2209 stepper_x]
uart_pin: gpio9
uart_address:0
interpolate: false
#   If true, enable step interpolation (the driver will internally
#   step at a rate of 256 micro-steps). This only works if microsteps
#   is set to 16. Interpolation does introduce a small systemic
#   positional deviation - see TMC_Drivers.md for details. The default
#   is True.
run_current: 0.50
sense_resistor: 0.110
stealthchop_threshold: 0                        # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
# diag_pin: ^gpio13
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
# driver_SGTHRS: 80

[stepper_y]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio1
dir_pin: gpio0                                    # Check motor direction in link above. If inverted, add a ! before gpio0
enable_pin: !gpio2
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200
endstop_pin: ^gpio13
position_endstop: 120
position_max: 120
homing_speed: 40 
homing_retract_dist: 0
#   Distance to backoff (in mm) before homing a second time during
#   homing. Set this to zero to disable the second home. The default
#   is 5mm.
#homing_positive_dir: true
#   If true, homing will cause the stepper to move in a positive
#   direction (away from zero); if false, home towards zero. It is
#   better to use the default than to specify this parameter. The
#   default is true if position_endstop is near position_max and false
#   if near position_min.
step_pulse_duration: 0.000004
#   The minimum time between the step pulse signal edge and the
#   following "unstep" signal edge. This is also used to set the
#   minimum time between a step pulse and a direction change signal.
#   The default is 0.000000100 (100ns) for TMC steppers that are
#   configured in UART or SPI mode, and the default is 0.000002 (which
#   is 2us) for all other steppers.

[tmc2209 stepper_y]
uart_pin: gpio9
uart_address: 1
interpolate: false
run_current: 0.50
sense_resistor: 0.110
stealthchop_threshold: 0
# diag_pin: ^gpio14
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
# driver_SGTHRS: 80

#####################################################################
#   Z Stepper Settings
#####################################################################
[stepper_z]
## Refer to https://docs.vorondesign.com/build/startup/#v0
step_pin: gpio26
dir_pin: gpio25                                    # Check motor direction in link above. If inverted, add a ! before gpio25
enable_pin: !gpio27
endstop_pin: ^gpio15
rotation_distance: 8
microsteps: 32
full_steps_per_rotation: 200
# endstop_pin: probe:z_virtual_endstop
#position_endstop: 120
position_max: 120
position_min: -2
homing_speed: 15
second_homing_speed: 3.0
homing_retract_dist: 3.0
step_pulse_duration: 0.000004
#   The minimum time between the step pulse signal edge and the
#   following "unstep" signal edge. This is also used to set the
#   minimum time between a step pulse and a direction change signal.
#   The default is 0.000000100 (100ns) for TMC steppers that are
#   configured in UART or SPI mode, and the default is 0.000002 (which
#   is 2us) for all other steppers.

[tmc2209 stepper_z]
uart_pin: gpio9
uart_address: 2
interpolate: false
run_current: 0.37                                 ## For LDO-42STH25-1004CL200E 1.0A
sense_resistor: 0.110
stealthchop_threshold: 0

[endstop_phase]
[endstop_phase stepper_z]
endstop_accuracy: 0.006250
#   Sets the expected accuracy (in mm) of the endstop. This represents
#   the maximum error distance the endstop may trigger (eg, if an
#   endstop may occasionally trigger 100um early or up to 100um late
#   then set this to 0.200 for 200um). The default is
#   4*rotation_distance/full_steps_per_rotation.
#trigger_phase:
#   This specifies the phase of the stepper motor driver to expect
#   when hitting the endstop. It is composed of two numbers separated
#   by a forward slash character - the phase and the total number of
#   phases (eg, "7/64"). Only set this value if one is sure the
#   stepper motor driver is reset every time the mcu is reset. If this
#   is not set, then the stepper phase will be detected on the first
#   home and that phase will be used on all subsequent homes.
endstop_align_zero: True
#   If true then the position_endstop of the axis will effectively be
#   modified so that the zero position for the axis occurs at a full
#   step on the stepper motor. (If used on the Z axis and the print
#   layer height is a multiple of a full step distance then every
#   layer will occur on a full step.) The default is False.